[{"D:\\Software Projects\\trying-things-with-react\\client\\src\\index.js":"1","D:\\Software Projects\\trying-things-with-react\\client\\src\\App.js":"2","D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\store.js":"3","D:\\Software Projects\\trying-things-with-react\\client\\src\\pages\\Index.js":"4","D:\\Software Projects\\trying-things-with-react\\client\\src\\pages\\Add.js":"5","D:\\Software Projects\\trying-things-with-react\\client\\src\\pages\\Edit.js":"6","D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\reducers\\index.js":"7","D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\selectors\\employees.js":"8","D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\selectors\\edit-employee.js":"9","D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\actions\\employees.js":"10","D:\\Software Projects\\trying-things-with-react\\client\\src\\components\\employees-grid\\EmployeesGrid.js":"11","D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\actions\\edit-employee.js":"12","D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\reducers\\employees.js":"13","D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\reducers\\edit-employee.js":"14","D:\\Software Projects\\trying-things-with-react\\client\\src\\components\\employees-grid\\EmployeesGridStyles.js":"15"},{"size":323,"mtime":1610098272821,"results":"16","hashOfConfig":"17"},{"size":675,"mtime":1610212161399,"results":"18","hashOfConfig":"17"},{"size":325,"mtime":1610099809652,"results":"19","hashOfConfig":"17"},{"size":457,"mtime":1610277175773,"results":"20","hashOfConfig":"17"},{"size":5040,"mtime":1610284623736,"results":"21","hashOfConfig":"17"},{"size":4814,"mtime":1610284522807,"results":"22","hashOfConfig":"17"},{"size":173,"mtime":1610202315513,"results":"23","hashOfConfig":"17"},{"size":364,"mtime":1610283826338,"results":"24","hashOfConfig":"17"},{"size":278,"mtime":1610284292102,"results":"25","hashOfConfig":"17"},{"size":1684,"mtime":1610279143048,"results":"26","hashOfConfig":"17"},{"size":4764,"mtime":1610284113776,"results":"27","hashOfConfig":"17"},{"size":1754,"mtime":1610279140737,"results":"28","hashOfConfig":"17"},{"size":979,"mtime":1610271513279,"results":"29","hashOfConfig":"17"},{"size":1151,"mtime":1610208286609,"results":"30","hashOfConfig":"17"},{"size":252,"mtime":1610043415227,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"884pp3",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Software Projects\\trying-things-with-react\\client\\src\\index.js",[],["69","70"],"D:\\Software Projects\\trying-things-with-react\\client\\src\\App.js",[],"D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\store.js",[],"D:\\Software Projects\\trying-things-with-react\\client\\src\\pages\\Index.js",[],"D:\\Software Projects\\trying-things-with-react\\client\\src\\pages\\Add.js",[],"D:\\Software Projects\\trying-things-with-react\\client\\src\\pages\\Edit.js",["71"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Card,\r\n  TextField,\r\n  Radio,\r\n  FormLabel,\r\n  FormControl,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  CardContent,\r\n  CardActions,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  fetchEmployee,\r\n  updateEmployeeCancel,\r\n  updateEmployee,\r\n} from \"../redux/actions/edit-employee\";\r\nimport {\r\n  getEmployee,\r\n  getLoading,\r\n  getError,\r\n} from \"../redux/selectors/edit-employee\";\r\nimport \"./index.css\";\r\n\r\nfunction Edit({ employee, isLoading, isError }) {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [firstName, setFirstName] = useState(null);\r\n  const [lastName, setLastName] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [gender, setGender] = useState(null);\r\n  const [department, setDepartment] = useState(null);\r\n\r\n  const handleEdit = () => {\r\n    const data = {\r\n      ...employee,\r\n      first_name: firstName || employee.first_name,\r\n      last_name: lastName || employee.last_name,\r\n      email: email || employee.email,\r\n      gender: gender || employee.gender,\r\n      department: department || employee.department,\r\n    };\r\n\r\n    dispatch(updateEmployee(id, data));\r\n\r\n    if (!isLoading && !isError) history.push(\"/\");\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    history.push(\"/\");\r\n    dispatch(updateEmployeeCancel());\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchEmployee(id));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Container maxWidth=\"md\">\r\n        <header>\r\n          <div className=\"header--title\">Edit employee {id}</div>\r\n        </header>\r\n        {!employee && isLoading && <CircularProgress />}\r\n        {employee && (\r\n          <Card style={{ maxWidth: 400 }}>\r\n            {isLoading && <LinearProgress />}\r\n            <CardContent style={{ padding: 20 }}>\r\n              <TextField\r\n                label=\"First Name\"\r\n                fullWidth\r\n                defaultValue={employee.first_name}\r\n                onChange={(e) => {\r\n                  setFirstName(e.target.value);\r\n                }}\r\n              ></TextField>\r\n              <TextField\r\n                style={{ marginTop: 10 }}\r\n                label=\"Last Name\"\r\n                fullWidth\r\n                defaultValue={employee.last_name}\r\n                onChange={(e) => {\r\n                  setLastName(e.target.value);\r\n                }}\r\n              ></TextField>\r\n              <TextField\r\n                style={{ marginTop: 10 }}\r\n                label=\"Email\"\r\n                defaultValue={employee.email}\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              ></TextField>\r\n              <FormControl style={{ marginTop: 30 }}>\r\n                <FormLabel component=\"legend\">Gender</FormLabel>\r\n                <RadioGroup\r\n                  row\r\n                  aria-label=\"gender\"\r\n                  name=\"Gender\"\r\n                  defaultValue={employee.gender.toLowerCase()}\r\n                  onChange={(e) => {\r\n                    setGender(e.target.value.toLowerCase());\r\n                  }}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"female\"\r\n                    control={<Radio />}\r\n                    label=\"Female\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"male\"\r\n                    control={<Radio />}\r\n                    label=\"Male\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n              <TextField\r\n                label=\"Department\"\r\n                defaultValue={employee.department}\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  setDepartment(e.target.value);\r\n                }}\r\n              ></TextField>\r\n            </CardContent>\r\n            <CardActions\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                padding: 20,\r\n              }}\r\n            >\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleEdit}>\r\n                Save\r\n              </Button>\r\n              <Button variant=\"contained\" onClick={handleCancel}>\r\n                Cancel\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  employee: getEmployee(state),\r\n  isLoading: getLoading(state),\r\n  isError: getError(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Edit);\r\n","D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\reducers\\index.js",[],"D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\selectors\\employees.js",[],"D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\selectors\\edit-employee.js",[],"D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\actions\\employees.js",["72","73"],"import axios from \"axios\";\r\n\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const FETCH_EMPLOYEES_SUCCESS = \"FETCH_EMPLOYEES_SUCCESS\";\r\nexport const ADD_EMPLOYEE_SUCCESS = \"ADD_EMPLOYEE_SUCCESS\";\r\nexport const DELETE_EMPLOYEE_SUCCESS = \"DELETE_EMPLOYEE_SUCCESS\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\n\r\nexport const setLoading = () => {\r\n  return { type: SET_LOADING };\r\n};\r\nexport const setError = (error) => {\r\n  return { type: SET_ERROR, error };\r\n};\r\n\r\nexport const fetchEmployeesSuccess = (data) => {\r\n  return { type: FETCH_EMPLOYEES_SUCCESS, payload: data };\r\n};\r\n\r\nexport const deleteEmployeeSuccess = () => {\r\n  return { type: DELETE_EMPLOYEE_SUCCESS };\r\n};\r\n\r\nexport const addEmployeeSuccess = () => {\r\n  return { type: ADD_EMPLOYEE_SUCCESS };\r\n};\r\n\r\nexport const fetchEmployees = (query, page, limit) => async (dispatch) => {\r\n  dispatch(setLoading());\r\n  try {\r\n    const q = query && query.trim();\r\n    const p = page || 1;\r\n    const l = limit || 5;\r\n    const { data } = await axios.get(`/api/employees/?q=${q}&p=${p}&l=${l}`);\r\n    dispatch(fetchEmployeesSuccess(data));\r\n  } catch (error) {\r\n    dispatch(setError(error));\r\n  }\r\n};\r\n\r\nexport const deleteEmployee = (id) => async (dispatch) => {\r\n  dispatch(setLoading());\r\n  try {\r\n    const res = await axios.delete(`/api/employees/${id}`);\r\n    dispatch(deleteEmployeeSuccess());\r\n  } catch (error) {\r\n    dispatch(setError(error));\r\n  }\r\n};\r\n\r\nexport const addNewEmployee = (data) => async (dispatch) => {\r\n  dispatch(setLoading());\r\n  try {\r\n    const res = await axios.post(\"/api/employees/create\", data);\r\n    dispatch(addEmployeeSuccess());\r\n  } catch (error) {\r\n    dispatch(setError(error));\r\n  }\r\n};\r\n","D:\\Software Projects\\trying-things-with-react\\client\\src\\components\\employees-grid\\EmployeesGrid.js",["74"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { useEmployeesGridStyles } from \"./EmployeesGridStyles\";\r\nimport { fetchEmployees, deleteEmployee } from \"../../redux/actions/employees\";\r\nimport {\r\n  getEmployees,\r\n  getLoading,\r\n  getEmployeesTotalCount,\r\n} from \"../../redux/selectors/employees\";\r\n\r\nexport function EmployeesGrid() {\r\n  const classes = useEmployeesGridStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const employees = useSelector(getEmployees);\r\n  const employeesTotalCount = useSelector(getEmployeesTotalCount);\r\n  const isLoading = useSelector(getLoading);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchEmployees(searchQuery, page + 1, rowsPerPage));\r\n  }, [searchQuery, page, rowsPerPage]);\r\n\r\n  const handleDeleteEmployee = (id) => {\r\n    dispatch(deleteEmployee(id));\r\n    dispatch(fetchEmployees(page + 1, rowsPerPage));\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" padding=\"16px\">\r\n        <TextField\r\n          label=\"Search\"\r\n          onChange={(e) => {\r\n            setPage(0);\r\n            setSearchQuery(e.target.value);\r\n          }}\r\n        />\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => {\r\n            history.push(`/employees/new`);\r\n          }}\r\n        >\r\n          <span className=\"material-icons\">add</span>\r\n        </Fab>\r\n      </Box>\r\n      <Box height=\"4px\">{isLoading && <LinearProgress />}</Box>\r\n\r\n      <TableContainer className={classes.container}>\r\n        <Table aria-label=\"table\">\r\n          <TableHead>\r\n            <TableRow className={classes.tableRow}>\r\n              <TableCell>ID</TableCell>\r\n              <TableCell align=\"left\">Name</TableCell>\r\n              <TableCell align=\"left\">Email</TableCell>\r\n              <TableCell align=\"right\">Gender</TableCell>\r\n              <TableCell align=\"right\">Department</TableCell>\r\n              <TableCell align=\"right\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {employees &&\r\n              employees.map((e) => (\r\n                <TableRow key={e.id} hover>\r\n                  <TableCell>{e.id}</TableCell>\r\n                  <TableCell align=\"left\">{e.first_name}</TableCell>\r\n                  <TableCell align=\"left\">{e.email}</TableCell>\r\n                  <TableCell align=\"right\">{e.gender}</TableCell>\r\n                  <TableCell align=\"right\">{e.department}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <IconButton\r\n                      aria-label=\"edit\"\r\n                      size=\"small\"\r\n                      onClick={() => history.push(`/employees/edit/${e.id}`)}\r\n                    >\r\n                      <span className=\"material-icons\">create</span>\r\n                    </IconButton>\r\n                    <IconButton\r\n                      aria-label=\"delete\"\r\n                      size=\"small\"\r\n                      onClick={() => {\r\n                        handleDeleteEmployee(e.id);\r\n                      }}\r\n                    >\r\n                      <span className=\"material-icons\">delete</span>\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={employeesTotalCount || 0}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={(event, newPage) => {\r\n          setPage(newPage);\r\n        }}\r\n        onChangeRowsPerPage={(event) => {\r\n          setRowsPerPage(event.target.value);\r\n          setPage(0);\r\n        }}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\actions\\edit-employee.js",["75"],"import axios from \"axios\";\r\n\r\nexport const FETCH_EMPLOYEE_LOADING = \"FETCH_EMPLOYEE_LOADING\";\r\nexport const FETCH_EMPLOYEE_SUCCESS = \"FETCH_EMPLOYEE_SUCCESS\";\r\nexport const UPDATE_EMPLOYEE_LOADING = \"UPDATE_EMPLOYEE_LOADING\";\r\nexport const UPDATE_EMPLOYEE_SUCCESS = \"UPDATE_EMPLOYEE_SUCCESS\";\r\nexport const UPDATE_EMPLOYEE_CANCEL = \"UPDATE_EMPLOYEE_CANCEL\";\r\nexport const FETCH_EMPLOYEE_ERROR = \"FETCH_EMPLOYEE_ERROR\";\r\nexport const UPDATE_EMPLOYEE_ERROR = \"UPDATE_EMPLOYEE_ERROR\";\r\n\r\nexport const fetchEmployeeLoading = () => {\r\n  return { type: FETCH_EMPLOYEE_LOADING };\r\n};\r\n\r\nexport const fetchEmployeeError = () => {\r\n  return { type: FETCH_EMPLOYEE_LOADING };\r\n};\r\n\r\nexport const updateEmployeeLoading = () => {\r\n  return { type: UPDATE_EMPLOYEE_LOADING };\r\n};\r\n\r\nexport const updateEmployeeError = () => {\r\n  return { type: UPDATE_EMPLOYEE_ERROR };\r\n};\r\n\r\nexport const fetchEmployeeSuccess = (data) => {\r\n  return { type: FETCH_EMPLOYEE_SUCCESS, payload: data };\r\n};\r\n\r\nexport const updateEmployeeSuccess = () => {\r\n  return { type: UPDATE_EMPLOYEE_SUCCESS };\r\n};\r\n\r\nexport const updateEmployeeCancel = () => {\r\n  return { type: UPDATE_EMPLOYEE_CANCEL };\r\n};\r\n\r\nexport const fetchEmployee = (id) => async (dispatch) => {\r\n  dispatch(fetchEmployeeLoading());\r\n  try {\r\n    const { data } = await axios.get(`/api/employees/${id}`);\r\n    dispatch(fetchEmployeeSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchEmployeeError(error));\r\n  }\r\n};\r\n\r\nexport const updateEmployee = (id, data) => async (dispatch) => {\r\n  dispatch(updateEmployeeLoading());\r\n  try {\r\n    const res = await axios.post(`/api/employees/update/${id}`, data);\r\n    dispatch(updateEmployeeSuccess());\r\n  } catch (error) {\r\n    dispatch(updateEmployeeError(error));\r\n  }\r\n};\r\n","D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\reducers\\employees.js",["76"],"import {\r\n  SET_LOADING,\r\n  FETCH_EMPLOYEES_SUCCESS,\r\n  ADD_EMPLOYEE_SUCCESS,\r\n  DELETE_EMPLOYEE_SUCCESS,\r\n  SET_ERROR,\r\n} from \"../actions/employees\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  data: [],\r\n  totalCount: null,\r\n  error: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_LOADING: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case FETCH_EMPLOYEES_SUCCESS: {\r\n      const { employees, totalCount } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        data: employees,\r\n        totalCount,\r\n        loading: false,\r\n      };\r\n    }\r\n    case ADD_EMPLOYEE_SUCCESS: {\r\n      return { ...state, loading: false };\r\n    }\r\n    case DELETE_EMPLOYEE_SUCCESS: {\r\n      return { ...state, loading: false };\r\n    }\r\n    case SET_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\Software Projects\\trying-things-with-react\\client\\src\\redux\\reducers\\edit-employee.js",["77"],"import {\r\n  FETCH_EMPLOYEE_LOADING,\r\n  FETCH_EMPLOYEE_SUCCESS,\r\n  FETCH_EMPLOYEE_ERROR,\r\n  UPDATE_EMPLOYEE_LOADING,\r\n  UPDATE_EMPLOYEE_SUCCESS,\r\n  UPDATE_EMPLOYEE_ERROR,\r\n  UPDATE_EMPLOYEE_CANCEL,\r\n} from \"../actions/edit-employee\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_EMPLOYEE_LOADING:\r\n    case UPDATE_EMPLOYEE_LOADING: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case FETCH_EMPLOYEE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        loading: false,\r\n      };\r\n    }\r\n    case UPDATE_EMPLOYEE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        data: null,\r\n        loading: false,\r\n      };\r\n    }\r\n    case UPDATE_EMPLOYEE_CANCEL: {\r\n      return {\r\n        ...state,\r\n        data: null,\r\n        loading: false,\r\n      };\r\n    }\r\n    case FETCH_EMPLOYEE_ERROR:\r\n    case UPDATE_EMPLOYEE_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\Software Projects\\trying-things-with-react\\client\\src\\components\\employees-grid\\EmployeesGridStyles.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":63,"column":6,"nodeType":"84","endLine":63,"endColumn":8,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":44,"column":11,"nodeType":"88","messageId":"89","endLine":44,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":54,"column":11,"nodeType":"88","messageId":"89","endLine":54,"endColumn":14},{"ruleId":"82","severity":1,"message":"90","line":38,"column":6,"nodeType":"84","endLine":38,"endColumn":38,"suggestions":"91"},{"ruleId":"86","severity":1,"message":"87","line":52,"column":11,"nodeType":"88","messageId":"89","endLine":52,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":16,"column":1,"nodeType":"94","endLine":47,"endColumn":2},{"ruleId":"92","severity":1,"message":"93","line":17,"column":1,"nodeType":"94","endLine":55,"endColumn":2},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["97"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["98"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [dispatch, id]",{"range":"103","text":"104"},"Update the dependencies array to be: [searchQuery, page, rowsPerPage, dispatch]",{"range":"105","text":"106"},[1624,1626],"[dispatch, id]",[1666,1698],"[searchQuery, page, rowsPerPage, dispatch]"]